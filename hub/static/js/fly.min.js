void function() {
    function setHelpHeight() {
        var height = _B.getViewport().height - 52 + 'px'
        $('.help').css('height', height)
    }

    function hideReturnHash() {
        $(this).hide()
    }

    function showReturnHash(event) {
        var newHash = this.href

        if (newHash.indexOf('#') === -1) {
            return
        }

        if ($(event.delegateTarget).hasClass('help-content')) {
            var $els = $(this).parent().prevAll('[id]')
            var $el = $els.eq(0)
            var hash = '#' + $el.attr('id')
        } else {
            var hash = $('#help-nav .active a').attr('href')
        }

        if (hash && hash !== newHash) {
            $('.returnHash').attr('href', hash).css('display', 'block')
        }
    }

    function setTopHash() {
        var topHash = $('#help-nav a').eq(0).attr('href')
        $('.returnTop').attr('href', topHash)
    }

    function setCurrentNav() {
        $(this).parent().addClass('active')
            .siblings().removeClass('active')
    }

    function showTable() {
        $(this).hide()
            .siblings('.btn-hide').show()
            .parent().next().show()
    }

    function hideTable() {
        $(this).hide()
            .siblings('.btn-show').show()
            .parent().next().hide()
    }

    if ($('.help')[0]) {
        var hasTableList = $('#tableList')[0]

        var $container = $('#help-content')
        var $nav = $('#help-nav')
        var $content = $('.help-content')

        setHelpHeight()

        $(window).bind('resize', function() {
            setHelpHeight()
        })

        if (!hasTableList) {
            setTopHash()
            // 代码高亮
            PR.prettyPrint()
            if ($nav[0].classList) {
                new _B.ScrollSpy({
                    element: $container[0],
                    navbar: $nav[0]
                })

                $nav.on('click', 'a', showReturnHash)
            }
            $content.on('click', 'a', showReturnHash)
            $('body').on('click', '.returnHash', hideReturnHash)
        } else {
            $('#help-nav').on('click', 'a', setCurrentNav)
        }
    }

    if ($('.data-help-tableList')[0]) {
        $('.data-help-tableList')
            .on('click', '.btn-show', showTable)
            .on('click', '.btn-hide', hideTable)
    }
}()

void function() {
    var strategyListTemplate = [
        '<div>',
        '<table class="table">',
            '<thead>',
                '<tr>',
                    '<td> 名称 </td>',
                    '<td> 创建时间 </td>',
                    '<td> 时间范围 </td>',
                    '<td> 频率 </td>',
                    '<td> 收益 </td>',
                    '<td> 最大回撤 </td>',
                    '<td> 状态 </td>',
                '</tr>',
            '</thead>',
            '<tbody>',
                '<% if( !data.backtest_list || data.backtest_list.length == 0){ %>',
                '<tr>',
                    '<td colspan=7>没有回测记录</td>',
                '</tr>',
                '<% } %>',
                '<% data.backtest_list.forEach(function(value) { %>',
                '<tr>',
                    '<td class="name">',
                        '<a href="./hub/backtest/history/<%=value.backtest_id%>" target="_blank"> <%=value.name%> </a>',
                    '</td>',
                    '<td class="time">',
                        '<%=value.time%>',
                    '</td>',
                    '<td class="time-range">',
                        // 修改单号：97069，zhangjz，20181105，历史回测记录时间范围格式修改，mod{
                        '<%=value.startTime.substring(0,4)%>-<%=value.startTime.substring(4,6)%>-<%=value.startTime.substring(6,8)%>' +
                        ' - <%=value.endTime.substring(0,4)%>-<%=value.endTime.substring(4,6)%>-<%=value.endTime.substring(6,8)%>',
                        // 修改单号：97069，zhangjz，20181105，历史回测记录时间范围格式修改，mod}
                    '</td>',
                    '<td class="frequency">',
                    '<% if (value.frequency == \'daily\') { %>',
                    '每天',
                    '<% } else { %>',
                    '分钟',
                    '<% } %>',
                    '</td>',
                    '<td class="algorithm_period_return">',
                        '<%=(value.algorithm_period_return*100).toFixed(2)%>%',
                    '</td>',
                    '<td class="max_drawdown">',
                        '<%=(value.max_drawdown*100).toFixed(3)%>%',
                    '</td>',
                    '<td class="status">',
                    '<%=value.speed_of_progress==1?"完成":"未完成" %>',
                    '</td>',
                '</tr>',
                '<% }) %>',
            '</tbody>',
        '</table>',
        '</div>',
        '<nav aria-label="Page navigation">',
            '<ul class="pagination">',
                '<li <% if (page == 1) { %> class="disabled" <% } %>>',
                    '<a href="javascript:void(0)" aria-label="Previous" value=1>',
                        '<span aria-hidden="true">&laquo;</span>',
                    '</a>',
                '</li>',
                '<% for (var p=1; p<=data.total_page; p++) { %>',
                    '<li <% if (page == p) { %> class="active" <% } %>><a href="javascript:void(0)" value=<%=p%>><%=p%></a></li>',
                '<% } %>',
                '<li <% if (page == data.total_page) { %> class="disabled" <% } %>>',
                    '<a href="javascript:void(0)" aria-label="Next" value=<%=data.total_page%>>',
                        '<span aria-hidden="true">&raquo;</span>',
                    '</a>',
                '</li>',
             '</ul>',
        '</nav>',
    ].join('')



    function showMessage(message) {
        BootstrapDialog.show({
            title: '提示',
            message: message
        })
    }

    function removeAlgorithmDataSuccess(json) {
        if (json.state === '1') {
            var error = []
            $('.checkMe').each(function() {
                var id = this.getAttribute('data-id')
                var name = this.getAttribute('data-name')
                var $parent = $(this).parent().parent()

                if (~json.removed.indexOf(id)) {
                    $parent.remove()
                }

                if (~json.istrading.indexOf(id)) {
                    error.push(name)
                }
            })

            if (error.length) {
                showMessage('交易中有使用策略“' + error.join('”、“') + '”，不能删除')
            }
        } else {
            showMessage('删除错误')
        }
    }

    function removeAlgorithmData(id) {
        return $.ajax({
            type: 'GET',
            dataType: 'json',
            url: '/api/strategy/delete',
            data: {
                id: id
            }
        })
    }

    function checkAll() {
        var checked = this.checked
        $('.checkMe').each(function() {
            this.checked = checked
        })
    }

    function showUploadAlgorithmMessage() {
        showMessage('此策略为从交易界面上传的策略，不能修改')
    }

    function removeAlgorithm() {
        var checked = []
        $('.checkMe').each(function() {
            if (this.checked) {
                checked.push(this.getAttribute('data-id'))
            }
        })

        if (checked.length) {
            BootstrapDialog.confirm({
                title: '提示',
                btnCancelLabel: '取消',
                btnOKLabel: '确认',
                message: '确实删除?',
                callback: function(ok) {
                    if (ok) {
                        removeAlgorithmData(checked.join(',')).
                            success(removeAlgorithmDataSuccess)
                    }
                }
            })
        } else {
            showMessage('请选择要删除的策略')
        }
    }

    function createAlgorithm() {
        var timestamp = new Date().getTime()
        var href = $(this).data('href') + '&timestamp=' + timestamp
        window.open(href, '_blank')
    }
    // bug单号：94315，zhangjz，20181018，历史回测修改为单个策略对应相应的历史回测记录，mod{
    function historyBacktest(offset, strategy_id){
        offset = offset || 1
        data = {offset:offset}
        if(strategy_id){
            data['strategy_id'] = strategy_id
        }
        $.ajax({
            method: 'POST',
            url: '/services/backtest/backtestlist',
            data: data,
            success: function(json) {
                if (!json.data || !_B.isArray(json.data.backtest_list)) {
                    json.data = {backtest_list:[], total_page:0, total_bars:0}
                }

                var template = _B.template(strategyListTemplate)
                var html = template({
                    data: json.data,
                    page: offset
                })

                $('#backtestHistoryModal').find('.modal-body').html(html)
                // bug单号：95335，zhangjz，20181019，历史回测页码请求时增加strategy_id筛选字段，mod{
                $('#backtestHistoryModal .pagination').on('click', 'a', function(){historyBacktest(this.getAttribute('value'), strategy_id)})
                // bug单号：95335，zhangjz，20181019，历史回测页码请求时增加strategy_id筛选字段，mod}
                $('#backtestHistoryModal').modal('show')
            },
            error: function() {}
        })
    }
    $('#btn-historyBacktest').on('click', '', function(){historyBacktest(1)})
    $('.strategy-history').on('click', '', function(){historyBacktest(1, this.getAttribute('value'))})
    // bug单号：94315，zhangjz，20181018，历史回测修改为单个策略对应相应的历史回测记录，mod}


    if ($('#algorithm-list-page')[0]) {
        $('#checkAll').on('click', checkAll)

        $('#btn-removeAlgo').on('click', removeAlgorithm)

        $('.algorithm-list')
            .on('click', '.uploadAlgorithm-name', showUploadAlgorithmMessage)

        $('.btn-createAlgo .dropdown-menu')
            .on('click', 'a', createAlgorithm)
    }
}()

void function() {
    function showMessage(message) {
        BootstrapDialog.show({
            title: '提示',
            message: message
        })
    }

    function checkAll() {
        var checked = this.checked
        var status = $('.trade-filter .active').attr('id').slice(6)

        $('.checkMe').each(function() {
            if (status === 'all' || $(this).parents('tr').hasClass(status)) {
                this.checked = checked
            }
        })
    }

    function getChecked() {
        var checked = []
        $('.checkMe').each(function() {
            if (this.checked) {
                checked.push(this.getAttribute('data-id'))
            }
        })

        return checked
    }

    function uncheck() {
        $('.checkMe, #checkAll').each(function() {
            this.checked = false
        })
    }

    function getCheckedByStatus(status_list) {
        var checked = []

        $('.checkMe').each(function() {
            if (this.checked) {
                var id = this.getAttribute('data-id')
                var status = this.getAttribute('data-status')

                if (status_list.indexOf(status) != -1) {
                    checked.push(id)
                }
            }
        })

        return checked
    }

    function getStockChecked() {
        var checked = []

        $('.checkMe').each(function() {
            if (this.checked) {
                var id = this.getAttribute('data-id')
                var business_type = this.getAttribute('data-business-type')

                if (business_type == 'stock') {
                    checked.push(id)
                }
            }
        })

        return checked
    }

    // 暂停
    function pause(checked) {
        $.ajax({
            dataType: 'json',
            url: '/trade/pause',
            data: {
                id: checked.join(',')
            },
            success: function(json) {
                if (json.state === 'success') {
                    $('.checkMe').each(function() {
                        var $this = $(this)
                        var trade_id = $this.data('id')
                        if (json.data.indexOf(trade_id) != -1) {
                            $this.data('status', '3')
                            $this.parent().siblings('.status').html('已暂停')
                        }
                    })

                    uncheck()
                } else {
                    showMessage('暂停失败')
                }
            },
            error: function(json) {
                showMessage('暂停失败')
            }
        })
    }

    // 暂停确认
    function pauseConfirm() {
        var checked = getCheckedByStatus(['0'])

        if (!checked.length) {
            showMessage('请选择运行中的交易')
            return
        }

        BootstrapDialog.confirm({
            title: '提示',
            message: '确定要暂停交易吗?',
            btnCancelLabel: '取消',
            btnOKLabel: '确定',
            callback: function(result) {
                if (result) {
                    pause(checked)
                }
            }
        })
    }

    // 终止
    function finish(checked) {
        $.ajax({
            dataType: 'json',
            url: '/trade/stop',
            data: {
                id: checked.join(',')
            },
            success: function(json) {
                if (json.state === 'success') {
                    $('.checkMe').each(function() {
                        var $this = $(this)
                        var id = $this.data('id')
                        if (json.data.indexOf(id) != -1) {
                            $this.data('status', '1')
                            $this.parent()
                                .siblings('.status').html('已终止')
                                .parent().removeClass('running').addClass('stopped')
                        }
                    })

                    uncheck()
                } else {
                    showMessage('终止失败')
                }
            },
            error: function(json) {
                showMessage('终止失败')
            }
        })
    }

    // 终止确认
    function finishConfirm() {
        var checked = getCheckedByStatus(['0', '3'])

        if (!checked.length) {
            showMessage('请选择运行中和已暂停的交易')
            return
        }

        var message = [
            '<p style="color:red;">',
            '    终止交易后将无法再次开启，确定要终止交易吗？',
            '</p>'
        ].join('')

        BootstrapDialog.confirm({
            title: '提示',
            message: message,
            btnCancelLabel: '取消',
            btnOKLabel: '确定',
            callback: function(result) {
                if (result) {
                    finish(checked)
                }
            }
        })
    }

    function removeTradeData(id) {
        return $.ajax({
            type: 'GET',
            dataType: 'json',
            url: '/trade/delete',
            data: {
                id: id
            }
        })
    }

    function removeTradeDataSuccess(json) {
        if (json.state === 'success') {
            $('.checkMe').each(function() {
                for (var i = 0, l = json.data.length; i < l; i++) {
                    if (this.getAttribute('data-id') === json.data[i]) {
                        $(this).parent().parent().remove()
                    }
                }
            })
        } else {
            showMessage('删除错误')
        }
    }

    function removeTrade() {
        var checked = getChecked()

        if (checked.length) {
            BootstrapDialog.confirm({
                title: '提示',
                btnCancelLabel: '取消',
                btnOKLabel: '确认',
                message: '确实删除?',
                callback: function(ok) {
                    if (ok) {
                        removeTradeData(checked.join(','))
                            .success(removeTradeDataSuccess)
                    }
                }
            })
        } else {
            showMessage('请选择要删除的交易')
        }
    }

    function changeFilter() {
        var $this = $(this)
        var $list = $('#trades-list')
        var $tr = $list.find('tr')
        var $running = $list.find('.running')
        var $stopped = $list.find('.stopped')

        $this.siblings('button').removeClass('active')

        switch ($this.attr('id')) {
            case 'trade-all':
                $tr.show()
                break
            case 'trade-running':
                $tr.not($running).hide()
                $running.show()
                break
            case 'trade-stopped':
                $tr.not($stopped).hide()
                $stopped.show()
                break
        }
    }

    function showUploadMessage(message) {
        $('.uploadStrategy-tips').html(message)
    }

    function clearStrategyFile() {
        $('#strategyFile').val('')
    }

    function uplaodStrategy() {
        var fileEl = $('#strategyFile')[0]
        if (!fileEl.files.length) {
            return
        }

        var formdata = new FormData()
        formdata.append('strategy', fileEl.files[0])
        showUploadMessage('正在上传...')

        $.ajax({
            type: 'POST',
            url: '/services/uploadusercode',
            data: formdata,
            contentType: false,
            processData: false,
            success: function(ret) {
                showUploadMessage(ret.error_no === 0 ? '上传成功' : '上传失败')
                clearStrategyFile() // 为了始终能触发change
            },
            error: function() {
                showUploadMessage('上传失败')
                clearStrategyFile()
            }
        })
    }

    function selectStrategyFile() {
        showUploadMessage('')
        $('#strategyFile').trigger('click')
    }

    function modifyPboxAccountData(pboxusername, pboxpwd) {
        return $.ajax({
            type: 'POST',
            dataType: 'json',
            url: '/services/pbox/updatepwd',
            data: {
                pboxusername: pboxusername,
                pboxpwd: pboxpwd
            }
        })
    }

    function modifyPboxAccount() {
        var pboxusername = $('#pboxusername').val()
        var pboxpwd = $('#pboxpwd').val()

        if (pboxusername && pboxpwd) {
            modifyPboxAccountData(pboxusername, pboxpwd)
                .success(function(json) {
                    if (json.error_no === 0) {
                        $('#pboxModal').modal('hide')
                    }

                    alert(json.error_info)
                })
        } else {
            alert('请输入账号信息')
        }
    }

    function showAccountMessage() {
        var $this = $(this)
        var href = $this.data('href')

        if (href) {
            var createType = href.indexOf('stock') != -1 ? 'stock' : 'future'

            var hasRunningStock = false
            var hasRunningFuture = false
            $('#trades-list .running').each(function() {
                var business_type = $(this).find('.business_type').html().indexOf('股票') != -1 ? 'stock' : 'future'

                if (business_type == 'stock') {
                    hasRunningStock = true
                } else {
                    hasRunningFuture = true
                }
            })

            var hasRunning = (createType == 'stock' && hasRunningStock) || (createType == 'future' && hasRunningFuture)

            //var hasRunning = $('#trades-list .running').length
            // 极速模式
            //var isUFX = $('#account-type').val() === 'PBOX_UFX_INTERFACE'

            href += '&timestamp=' + new Date().getTime()

            if (hasRunning/* && isUFX*/) {
                BootstrapDialog.confirm({
                    title: '提示',
                    btnCancelLabel: '取消',
                    btnOKLabel: '确认',
                    message: '是否确认创建交易，当前已有交易正在运行，多个交易同时运行将会共用账户资金，影响收益计算结果，是否继续?',
                    callback: function(ok) {
                        if (ok) {
                            window.open(href, '_blank')
                            //window.location.href = href
                        }
                    }
                })
            } else if (!hasRunning/* && isUFX*/) {
                window.open(href, '_blank')
                //window.location.href = href
            }

        }
    }

    function showDownloadModal() {
        var stockChecked = getStockChecked()
        var checked = getChecked()

        if (checked.length != stockChecked.length) {
            showMessage('对账功能只支持业务类型为股票的交易')
        } else if (stockChecked.length) {
            $('#downloadTradeDataModal').modal('show')
        } else {
            showMessage('请选择要对账的交易，只支持业务类型为股票的交易')
        }
    }

    function download() {
        var $modal = $('#downloadTradeDataModal')
        var $error = $modal.find('.error')
        var checked = getStockChecked()
        var startDate = $('#start-date').val()
        var endDate = $('#end-date').val()

        $error.html('')

        if (!startDate) {
            $error.html('开始时间不能为空')
            return
        }
        if (!endDate) {
            $error.html('结束时间不能为空')
            return
        }
        if (startDate.replace(/-/g, '') > endDate.replace(/-/g, '')) {
            $error.html('开始时间要小于结束时间')
            return
        }

        $modal.modal('hide')

        var url = '/trade/order_mapping/download_file?startDate=' + startDate + '&endDate=' + endDate + '&id=' + checked.join(',')
        location.href = url
    }

    function initDatepicker() {
        var $startDate = $('#start-date')
        var $endDate = $('#end-date')
        var startDate = $startDate.attr('_startDate')
        var lastDate = $startDate.attr('_lastDate')
        var options = {
            dateFormat: 'yy-mm-dd',
            minDate: startDate,
            maxDate: lastDate,
            changeYear: true,
            changeMonth: true,
            closeText: '关闭',
            prevText: '&#x3C;上月',
            nextText: '下月&#x3E;',
            currentText: '今天',
            monthNames: [
                '一月',
                '二月',
                '三月',
                '四月',
                '五月',
                '六月',
                '七月',
                '八月',
                '九月',
                '十月',
                '十一月',
                '十二月'
            ],
            monthNamesShort: [
                '1',
                '2',
                '3',
                '4',
                '5',
                '6',
                '7',
                '8',
                '9',
                '10',
                '11',
                '12'
            ],
            dayNames: ['星期日', '星期一', '星期二', '星期三', '星期四', '星期五', '星期六'],
            dayNamesShort: ['周日', '周一', '周二', '周三', '周四', '周五', '周六'],
            dayNamesMin: ['日', '一', '二', '三', '四', '五', '六']
        }

        $startDate.datepicker(options)
        $endDate.datepicker(options)
    }

    if ($('#trade-list-page')[0]) {
        initDatepicker()

        $('#checkAll').on('click', checkAll)
        $('.btn-removeTrade').on('click', removeTrade)
        $('.trade-filter').on('click', 'button', changeFilter)
        $('#strategyFile').change(uplaodStrategy)
        $('.btn-uploadStrategy').on('click', selectStrategyFile)
        $('#pboxModal').on('click', '.btn-login', modifyPboxAccount)
        $('.btn-createTrade .dropdown-menu').on('click', 'a', showAccountMessage)
        $('.btn-download-trade-data').on('click', showDownloadModal)
        $('#downloadTradeDataModal .btn-confirm').on('click', download)

        $('.btn-pause').on('click', pauseConfirm)
        $('.btn-finish').on('click', finishConfirm)
    }
}()

void function() {
    var pageURL = window.location.href
    var business_type = _B.getURLParam('business_type', pageURL, true)
    var isPT = document.getElementById('trade_unit')

    var strategyListTemplate = [
        '<table class="table">',
            '<thead>',
                '<tr>',
                    '<th class="col-sm-1"></th>',
                    '<th class="col-sm-6">对应策略</th>',
                    '<th class="col-sm-2">操作频率</th>',
                    '<th class="col-sm-3">创建时间</th>',
                '</tr>',
            '</thead>',
            '<tbody>',
                '<% data.forEach(function(value) { %>',
                '<tr>',
                    '<td>',
                        '<% if (value.id == backtestContentId) { %>',
                        '<input type="radio" name="strategy" checked="checked" value="<%=value.id%>" data-business-mode="<%=value.business_mode%>" data-frequency="<%=value.frequency%>" data-name="<%=value.name%>">',
                        '<% } else { %>',
                        '<input type="radio" name="strategy" value="<%=value.id%>" data-business-mode="<%=value.business_mode%>" data-frequency="<%=value.frequency%>" data-name="<%=value.name%>">',
                        '<% } %>',
                    '</td>',
                    '<td>',
                        '<%=value.name%>',
                        '<% if (value.business_mode == \'1\') { %>',
                        '<span class="fa fa-upload badge-upload"></span>',
                        '<% } %>',
                    '</td>',
                    '<td class="frequency">',
                    '<% if (value.frequency == \'daily\') { %>',
                    '每天',
                    '<% } else { %>',
                    '分钟',
                    '<% } %>',
                    '</td>',
                    '<td><%=value.time%></td>',
                '</tr>',
                '<% }) %>',
            '</tbody>',
        '</table>'
    ].join('')

    function showMessage(message) {
        BootstrapDialog.show({
            title: '提示',
            message: message
        })
    }

    function strategyModalOk() {
        var id
        var name
        var frequency
        var business_mode
        var $strategyModal = $('#strategyModal')

        $strategyModal.find('input[type="radio"]').each(function() {
            if (this.checked) {
                id = this.value
                name = this.getAttribute('data-name')
                frequency = this.getAttribute('data-frequency')
                business_mode = this.getAttribute('data-business-mode')
            }
        })

        if (id) {
            $('#backtestContentId').val(id)
            $('#backtestContentName').val(name)
            $('#frequency').val(frequency)
            $('#business_mode').val(business_mode)
        }

        $strategyModal.modal('hide')
    }

    function pboxModalOk() {
        var trade_unit
        var client_name
        var $pboxModal = $('#pboxModal')

        $pboxModal.find('input[type="radio"]').each(function() {
            if (this.checked) {
                trade_unit = this.value
                client_name = this.getAttribute('data-name')
            }
        })

        if (trade_unit) {
            $('#trade_unit').val(trade_unit)
            $('#pboxAccountName').val(client_name)
        }

        $pboxModal.modal('hide')
    }

    function combinePboxModalOk() {
        var trade_unit = []
        var acc_name = []
        var $pboxModal = $('#pboxModal')

        $pboxModal.find('table').each(function() {
            var flag = true
            $(this).find('input[type="radio"]').each(function() {
                if(flag){
                    if (this.checked) {
                        trade_unit.push(this.value)
                        client_name = this.getAttribute('data-name')
                        var tds = this.parentElement.parentElement.childNodes
                        acc_name.push(tds[1].innerText+"("+ tds[2].innerText +")")
                        flag = false
                    }
                }
            })
            if(flag){
                trade_unit.push('')
            }
       })

        if (trade_unit.length == 2) {
            $('#trade_unit').val(trade_unit[0])
            $('#future_trade_unit').val(trade_unit[1])
            var client_name = acc_name.join('-')
            $('#pboxAccountName').val(client_name)
        }

        $pboxModal.modal('hide')
    }

    function loginModalOk(){
        var st = getCookie('nekot-eruces')
        var username = $('#user-name').val();
        var password = $('#user-password').val();
        username = base64(st.slice(16,32) + base64(st.slice(0,16) + username));
        password = base64(st.slice(16,32) + base64(st.slice(0,16) + password));

        $.ajax({
            method: 'POST',
            url: '/services/option/login',
            data: {
                business_type: 'option',
                username: username,
                password: password
            },
            success: function(json) {
                $('#loginModal').modal('hide')
                $('#user-message').html('')
                BootstrapDialog.confirm({
                    title: '提示',
                    btnCancelLabel: '取消',
                    btnOKLabel: '确认',
                    message: $('#trade_warning').val(),
                    callback: function(v) {
                        if (v) {
                            tradeWarningOk()
                        }
                    }
                })
            },
            error: function(json) {
                $('#user-message').html(JSON.parse(json.responseText).message)
            }
        })
    }

    function base64(input) {
        var _keyStr = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="
        if(!input){
            return null
        }
        var output = "", chr1, chr2, chr3, enc1, enc2, enc3, enc4, i = 0;
        input = utf8_encode(input);
        while (i < input.length) {
            chr1 = input.charCodeAt(i++);
            chr2 = input.charCodeAt(i++);
            chr3 = input.charCodeAt(i++);
            enc1 = chr1 >> 2;
            enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);
            enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);
            enc4 = chr3 & 63;
            if (isNaN(chr2)) {
                enc3 = enc4 = 64;
            } else if (isNaN(chr3)) {
                enc4 = 64;
            }
            output = output +
            _keyStr.charAt(enc1) + _keyStr.charAt(enc2) +
            _keyStr.charAt(enc3) + _keyStr.charAt(enc4);
        }
        return output;
    }

    function utf8_encode(e){
        e = e.replace(/rn/g, "n");
        var t = "";
        for (var n = 0; n < e.length; n++) {
            var r = e.charCodeAt(n);
            if (r < 128) {
                t += String.fromCharCode(r)
            }else if(r > 127 && r < 2048){
                t += String.fromCharCode(r >> 6 | 192);
                t += String.fromCharCode(r & 63 | 128)
            }else{
                t += String.fromCharCode(r >> 12 | 224);
                t += String.fromCharCode(r >> 6 & 63 | 128);
                t += String.fromCharCode(r & 63 | 128)
            }
        }
        return t
    }
    function getCookie(name){
        var arr,reg=new RegExp("(^| )"+name+"=([^;]*)(;|$)");
        if(arr=document.cookie.match(reg)){
            return unescape(arr[2]);
        }
        else{
            return null;
        }
    }


    function getPBOX() {
        $.ajax({
            method: 'POST',
            url: '/services/pbox/identify',
            data: {
                business_type: business_type
            },
            async: false,
            success: function(json) {
                if (json.resp_result) {
                    if(business_type == 'combine'){
                        stock_units = []
                        future_units = []
                        json.resp_result.forEach(function(unit){
                            if(unit['asset_prop'] == '0'){
                                stock_units.push(unit)
                            }else if(unit['asset_prop'] == '9'){
                                future_units.push(unit)
                            }
                            html = "<div>股票交易单元</div>" + get_trade_unit_html(stock_units, 'pbox_stock')
                                 + "<div>期货交易单元</div>" + get_trade_unit_html(future_units, 'pbox_future');
                        })
                    }else{
                        html = get_trade_unit_html(json.resp_result)
                    }
                    $('.pbox-list').html(html).show()
                } else {
                    showMessage(json.error_info || '获取交易单元出错')
                }
            },
            error: function() {}
        })
    }

    function get_trade_unit_html(trade_units, input_name){
        var html = ''
        input_name = input_name || 'pbox'
        if(trade_units.length){
            trade_units.forEach(
                function(item){
                    var name = item.client_name + '(账号) —— ' + item.product_name + '(产品)'

                    if (item.used >= 5) { // 已使用完
                        html += '<tr class="used">'
                        html += '<td><input disabled="disabled" type="radio" name="'+ input_name +'" value="' + item.trade_unit + '" data-name="' + name + '"></td>'
                        html += '<td>' + item.client_name + '</td>'
                        html += '<td>' + item.product_name + '</td>'
                        html += '<td>已创建'+ item.used + '个交易</td>'
                        html += '</tr>'
                    } else {
                        html += '<tr>'
                        html += '<td><input type="radio" name="'+ input_name +'" value="' + item.trade_unit + '" data-name="' + name + '"></td>'
                        html += '<td>' + item.client_name + '</td>'
                        html += '<td>' + item.product_name + '</td>'
                        html += '<td>已创建'+ item.used + '个交易</td>'
                        html += '</tr>'
                    }
                }
            )
            return '<table class="table"><thead><th class="col-sm-1"></th><th class="col-sm-4">账号</th><th class="col-sm-4">产品</th><th class="col-sm-3">状态</th></thead><tbody>' + html + '</tbody></table>'
        } else {
            return '<p>没有可用的账号</p>'
        }
    }

    function getStrategyList() {
        $.ajax({
            method: 'GET',
            url: '/api/strategy/list',
            data: {
                business_type: business_type
            },
            success: function(json) {
                if (!_B.isArray(json.data)) {
                    json.data = []
                }

                var template = _B.template(strategyListTemplate)
                var backtestContentId = $('#backtestContentId').val()
                var html = template({
                    data: json.data,
                    backtestContentId: backtestContentId
                })

                $('#strategyModal').find('.modal-body').html(html)
            },
            error: function() {}
        })
    }

    function tradeWarningOk() {
        var name = $('#name').val()
        var backtestContentId = $('#backtestContentId').val()
        var frequency = $('#frequency').val()
        var baseCapital = $('#baseCapital').val()
        var business_mode = $('#business_mode').val()
        var trade_unit = $('#trade_unit').val()
        var future_trade_unit = $('#future_trade_unit').val()

        var data = {
            name: name,
            backtestContentId: backtestContentId,
            frequency: frequency,
            baseCapital: baseCapital,
            business_mode: business_mode,
            business_type: business_type
        }

        if (isPT) {
            if(business_type == 'combine'){
                data.stock_trade_unit = trade_unit
                data.future_trade_unit = future_trade_unit
            } else{
                data.trade_unit = trade_unit
            }
        }

        $.ajax({
            method: 'POST',
            url: '/services/trade/add',
            data: data,
            success: function(json) {
                if (json.status === 'failed') {
                    showMessage(json.message)
                } else {
                    window.location.href = '/trade/detail/' + json.backtestId
                }
            },
            error: function() {}
        })
    }

    function createTrade() {
        var name = $('#name').val()
        var trade_unit = $('#trade_unit').val()
        var future_trade_unit = $('#future_trade_unit').val()
        var backtestContentId = $('#backtestContentId').val()
        var frequency = $('#frequency').val()
        var baseCapital = $('#baseCapital').val()

        var message = $('#trade_warning').val()

        if (!name) {
            showMessage('请填写交易名称')
            return
        }
        if (name != flyUtils.sanitize(name)) {
            showMessage('禁止输入脚本')
            return
        }
        if (isPT){
            if (business_type=='combine'){
                if (!trade_unit || !future_trade_unit) {
                    showMessage('未选择必要的交易单元')
                    return
                }
            }

            if (!trade_unit) {
                showMessage('请选择交易单元')
                return
            }

        }
        // 修改单号：97255，zhangjz，20181106，如果message为以下两种状态则弹出不带确认键的警告栏，mod{
        if (message == '当前时间不允许创建交易' || message == '配置日期格式错误') {
            showMessage(message)
            return
        }
        // 修改单号：97255，zhangjz，20181106，如果message为以下两种状态则弹出不带确认键的警告栏，mod}
        if (!backtestContentId) {
            showMessage('请选择策略方案')
            return
        }
        if(business_type == 'option'){
            $('#loginModal').modal('show')
        }else{
            BootstrapDialog.confirm({
                title: '提示',
                btnCancelLabel: '取消',
                btnOKLabel: '确认',
                message: message,
                callback: function(v) {
                    if (v) {
                        tradeWarningOk()
                    }
                }
            })
        }

    }

    function showStrategyModal() {
        getStrategyList()
        $('#strategyModal').modal('show')
    }

    if ($('#trade-create-page')[0]) {
        // PBOX_UFX_INTERFACE 不需要交易单元
        // PBOX_PT_INTERFACE
        if (isPT) {
            getPBOX()
            if(business_type == 'combine'){
                $('#pboxModal').on('click', '.btn-confirm', combinePboxModalOk)
            } else {
                $('#pboxModal').on('click', '.btn-confirm', pboxModalOk)
            }
        }

        $('#btn-createTrade').on('click', createTrade)
        $('#btn-show-strategy-modal').on('click', showStrategyModal)
        $('#strategyModal').on('click', '.btn-confirm', strategyModalOk)
        $('#loginModal').on('click', '.btn-confirm', loginModalOk)
    }
}()

void function() {
    if ($('#index-page')[0]) {
        var getStudyData = function() {
            var uid = $('#uid').val() || ''
            var nickName = $('#nickName').val() || ''
            var token = $('#token').val() || ''
            var roleNum = $('#roleNum').val() || ''

            uid = uid ? Number(uid) : uid

            return {
                uid: uid,
                nickName: nickName,
                token: token,
                roleNum: roleNum
            }
        }

        var saveStudyData = function(data) {
            var data_str = JSON.stringify(data)
            localStorage.setItem('studyData', data_str)
        }

        var studyData = getStudyData()
        localStorage.removeItem('studyData')
        if (studyData.uid) {
            saveStudyData(studyData)
        }
    }
}()
